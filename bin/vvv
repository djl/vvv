#!/bin/sh
#/ Usage: vvv <options>
#/
#/ Commands:
#/   -c <name> [<source>]     Create a new environment
#/   -d <name>                Delete an environment
#/   -l                       List all sources
set -e
PROGNAME=$(basename "$0")

VVV_ROOT="${VVV_ROOT:-$HOME/.vvv}"
VVV_ENVS="${VVV_ENVS:-$VVV_ROOT/envs}"
VVV_SOURCES="${VVV_SOURCES:-$VVV_ROOT/sources}"
VVV_ENV_FILE=".vvvenv"

abort() {
  echo "$PROGNAME: $1" >&2
  exit 1
}

usage() {
  grep "^#/" $0 | cut -c4- >&2
  exit 2
}

activate() {
  name=$1
  VVV_ACTIVE_ENV="$VVV_ENVS/$name"
  [ -d "$VVV_ACTIVE_ENV" ] || abort "Unknown environment '$name'"
  shift
  export VVV_ACTIVE_ENV
  [ -f "$VVV_ACTIVE_ENV/$VVV_ENV_FILE" ] && source "$VVV_ACTIVE_ENV/$VVV_ENV_FILE"
  exec "${@:-$SHELL}"
}

create() {
  name=$1
  source=$2
  [ -n "$name" ] || usage
  [ -n "$source" -a -f "$VVV_SOURCES/$source" ] || abort "Unknown source '$source'"
  [ -d "$VVV_ENVS/$name" ] && abort "Environment '$name' already exists"
  mkdir -p "$VVV_ENVS/$name"
  if [ -n "$source" ]; then
    if [ -n "$VVV_COPY_SOURCE" ]; then
      cp $VVV_SOURCES/$source $VVV_ENVS/$name/$VVV_ENV_FILE
    else
      ln -s $VVV_SOURCES/$source $VVV_ENVS/$name/$VVV_ENV_FILE
    fi
  fi
  [ -n "$VVV_AUTO_ACTIVATE" ] && activate "$name"
}

delete() {
  for x in $@; do
    rm -rf "$VVV_ENVS/$x"
  done
}

list_envs() {
  find "$VVV_ENVS/" -maxdepth 1 -type d | sed '1d' | xargs -n1 basename 2> /dev/null
}

list_sources() {
  find "$VVV_SOURCES" -maxdepth 1 -type f | xargs -n1 basename 2> /dev/null
}

while getopts :hld:c: o; do
  case "$o" in
  l)
    list_sources
    exit
    ;;
  c)
    shift 2
    create "$OPTARG" "$1"
    exit
    ;;
  d)
    shift
    delete "$@"
    exit
    ;;
  *)
    usage
    ;;
  esac
done

shift $((OPTIND-1))

if [ $# -eq 0 ]; then
  list_envs
  exit
fi

activate "$1" "${@:2}"
