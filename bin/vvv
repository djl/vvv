#!/bin/sh
#/ Usage:
#/     vvv create [-t TEMPLATE] ENV
#/         Create a new environment from optional TEMPLATE
#/     vvv rm ENV [...]
#/         Delete the given environments
#/     vvv ls
#/         List all environments
#/     vvv templates
#/         List all templates
#/     vvv activate ENV [CMD...]
#/         Activate an environment
#/     vvv help
#/         Show this message and exit
set -e
PROGNAME=$(basename "$0")

VVV_ROOT="${VVV_ROOT:-$HOME/.vvv}"
VVV_ENVS="${VVV_ENVS:-$VVV_ROOT/envs}"
VVV_TEMPLATES="${VVV_TEMPLATES:-$VVV_ROOT/templates}"
VVV_ENV_FILE=".vvv-env"

abort() {
  echo "$PROGNAME: $1" >&2
  exit 1
}

cmd_usage() {
  grep "^#/" $0 | cut -c4- >&2
  exit 2
}

cmd_version() {
  echo "$PROGNAME $VERSION"
  exit
}

cmd_activate() {
  local name=$1
  [ -n "$name" ] || cmd_usage

  VVV_ACTIVE_ENV="$VVV_ENVS/$name"
  [ -d "$VVV_ACTIVE_ENV" ] || abort "Unknown environment '$name'"

  shift
  export VVV_ACTIVE_ENV
  [ -f "$VVV_ACTIVE_ENV/$VVV_ENV_FILE" ] && source "$VVV_ACTIVE_ENV/$VVV_ENV_FILE"
  exec "${@:-$SHELL}"
}

cmd_create() {
  local name template
  while getopts :t: o; do
    case "$o" in
    t)
      template=$OPTARG
      ;;
    esac
  done

  shift $((OPTIND-1))
  name=$1
  [ -n "$name" ] || cmd_usage
  [ -n "$template" -a -f "$VVV_TEMPLATES/$template" ] || abort "Unknown template '$template'"
  [ -d "$VVV_ENVS/$name" ] && abort "Environment '$name' already exists"
  mkdir -p "$VVV_ENVS/$name"
  if [ -n "$template" ]; then
    if [ -n "$VVV_SYMLINK_TEMPLATE" ]; then
      ln -s $VVV_TEMPLATES/$template $VVV_ENVS/$name/$VVV_ENV_FILE
    else
      cp $VVV_TEMPLATES/$template $VVV_ENVS/$name/$VVV_ENV_FILE
    fi
  fi
  [ -n "$VVV_AUTO_ACTIVATE" ] && cmd_activate "$name"
}

cmd_delete() {
  for x in $@; do
    rm -rf "$VVV_ENVS/$x"
  done
}

cmd_list() {
  find "$VVV_ENVS/" -maxdepth 1 -type d | sed '1d' | xargs -n1 basename 2> /dev/null
}

cmd_templates() {
  local templates=$(find "$VVV_TEMPLATES" -maxdepth 1 -type f | xargs -n1 basename 2> /dev/null)
  for t in $templates; do
    local desc=$(grep -E "^# vvv: " "$VVV_TEMPLATES/$t" | sed "s/\(.*\)vvv:[[:space:]]*\(.*\)/\\2/")
    if [ -n "$desc" -a -z "$1" ]; then
       echo "$t - $desc"
    else
       echo $t
    fi
  done
}

cmd_current() {
  if [ -n "$VVV_ACTIVE_ENV" ]; then
    basename "$VVV_ACTIVE_ENV"
  else
    echo "No currently active environment"
  fi
}

COMMAND="$1"

case "$1" in
  create|new|c|n)
    shift
    cmd_create "$@"
    ;;
  delete|rm)
    shift
    cmd_delete "$@"
    ;;
  templates|t)
    shift
    cmd_templates "$@"
    ;;
  activate|use|a|u|.)
    shift
    cmd_activate "$@"
    ;;
  current)
    shift
    cmd_current "$@"
    ;;
  version|--version)
    shift
    cmd_version "$@"
    ;;
  list|ls|l|'')
    shift || true
    cmd_list "$@"
    ;;
  *)
    cmd_usage
    ;;
esac
exit 0
